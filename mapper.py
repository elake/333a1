map = [[0x7, 0x5, 0x0, 0x4, 0x2, 0x3, 0xb, 0x6, 0xa, 0x8, 0x9, 0xd, 0xc, 0xf, 0xe, 0x1],[0x3, 0x8, 0xd, 0xa, 0xc, 0xe, 0xf, 0xb, 0x7, 0x6, 0x4, 0x5, 0x1, 0x2, 0x0, 0x9],[0x4, 0x0, 0x3, 0x1, 0xb, 0xa, 0x8, 0x5, 0x9, 0xd,0xc, 0xe, 0xf, 0x6, 0x7, 0x2],[0x9, 0xe, 0x7, 0xc, 0x6, 0x4, 0x5, 0xd, 0x1, 0x0, 0x2, 0x3, 0xb, 0x8, 0xa, 0xf],[0x1, 0x3, 0xa, 0x2, 0x8, 0x9, 0xd, 0x0, 0xc, 0xe, 0xf, 0x7, 0x6, 0x5, 0x4, 0xb],[0xe, 0x6, 0x5, 0x7, 0x1, 0x0, 0x2, 0xf, 0x3, 0xb, 0xa, 0x8,0x9, 0xc, 0xd, 0x4],[0x2, 0xa, 0x9, 0xb, 0xd, 0xc, 0xe, 0x3, 0xf, 0x7, 0x6, 0x4, 0x5, 0x0, 0x1, 0x8],[0x6, 0x1, 0x2, 0x5, 0x3, 0xb, 0xa, 0x4, 0x8, 0x9, 0xd, 0xc, 0xe, 0x7, 0xf, 0x0],[0xb, 0x9, 0xc, 0x8, 0xe, 0xf, 0x7, 0xa, 0x6, 0x4, 0x5, 0x1, 0x0, 0x3,0x2, 0xd],[0x0, 0xb, 0x8, 0x3, 0x9, 0xd, 0xc, 0x2, 0xe, 0xf, 0x7, 0x6, 0x4, 0x1, 0x5, 0xa],[0x8, 0xc, 0xf, 0xd, 0x7, 0x6, 0x4, 0x9, 0x5, 0x1, 0x0, 0x2, 0x3, 0xa, 0xb, 0xe],[0x5, 0x2, 0xb, 0x0, 0xa, 0x8, 0x9, 0x1, 0xd, 0xc, 0xe, 0xf, 0x7, 0x4, 0x6, 0x3],[0xd, 0xf, 0x6, 0xe, 0x4, 0x5, 0x1, 0xc, 0x0, 0x2, 0x3, 0xb, 0xa, 0x9, 0x8, 0x7],[0xc, 0x7, 0x4, 0xf, 0x5, 0x1, 0x0, 0xe, 0x2, 0x3, 0xb, 0xa, 0x8, 0xd, 0x9, 0x6],[0xa, 0xd, 0xe, 0x9, 0xf, 0x7, 0x6, 0x8, 0x4, 0x5, 0x1, 0x0, 0x2, 0xb, 0x3, 0xc],[0xf, 0x4, 0x1, 0x6, 0x0, 0x2, 0x3, 0x7, 0xb, 0xa, 0x8, 0x9, 0xd, 0xe, 0xc, 0x5]]

def check(c, k, map):
    for i in range(16):
        if map[0][i] == k:
            x = i

    for i in range(16):
        if map[i][x] == c:
            return map[i][0]

def lobcheck(c, k, map):
    """
    Takes two lists of integers (use ord to convert bytes to integers)
    and checks if k is the key for c.
    """
    rval = []
    ii = 0
    while ii < len(c):
        for i in range(len(k)):
            cur = c[ii]
            ii += 1
            xlow = check(cur % 16, k[i] >> 4, map)
            xhigh = check(cur >> 4, k[i] % 16, map)
            rval.insert(0, (xhigh << 4) + xlow)
    return rval

def brute(c, kl, map):
    """
    Takes a list of keys (keys are also lists) and tries all of the keys
    
    >>> brute([162, 187, 42], [[67, 66, 65], [55, 43, 44]], map)
    [67, 66, 65]
    """

    for k in kl:
        if max(lobcheck(c, k, map)) <= 127:
            return k

xord = []
f = open("ciphertext1", "rb")
while True:
    fc = f.read(1)
    if fc:
        xord.append(ord(fc))
    else:
        break

pskeys = [i for i in range(48, 58, 1)]
for i in range(65, 91, 1):
    pskeys.append(i)
for i in range(97, 123, 1)

